
<div class="content-wrapper">
  <!-- Content Header (Page header) -->
  <section class="content-header">
    <h1>
      Reporte Gráfico <?php echo ' de Tanque '.$this->input->post('tanque').' y Fecha '.$this->input->post('date1'); ?>
    </h1>
    <ol class="breadcrumb">
      <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
      <li><a href="<?php echo base_url('Reportes/index')?>">Reportes</a></li>
      <li><a href="#">Grafico</a></li>
    </ol>
  </section>

  <!-- Main content -->
  <section class="content" id="areaimprimir">
    <!-- Small boxes (Stat box) -->

    <div class="row">

      <div class="col-md-12">

        <div class="box box-info">
          <div class="box-header with-border">
            <h3 class="box-title">Agua</h3>

          </div>
          <div class="box-body">
            <div class="chart">
              <canvas id="areagua" style="height:250px"></canvas>
            </div>
          </div>
          <!-- /.box-body -->
        </div>
        <!-- /.box -->

        <div class="box box-info">
          <div class="box-header with-border">
            <h3 class="box-title">Combustible</h3>
          </div>
          <div class="box-body">
            <div class="chart">
              <canvas id="areacombustible" style="height:250px"></canvas>
            </div>
          </div>
          <!-- /.box-body -->
        </div>
        <!-- /.box -->



        <?php
        if ($data==false) { echo ""; }
        else
        {
          $nivel2 = 0;
          $subio = 1;
          $bajacomb = 0;
          $subocomb = 0;
          $principio = 0;
          $i = 0;
          foreach ($data as $value)
          {
            $nivel1 = $value->med_nivel_combustible;
            if ($i==0) {
              $principio = $nivel1;
            }

            // parte de subirrrrrrrrrrrrrrrrrrr
            if ($nivel2>$nivel1)
            {
              if ($subio==0)
              {
                $subio = 1;

                $galon1 = 0;
                $galon2 = 0;
                // inicio nivel de combustible
                $buscar1['combustible'] = $nivel2;
                $buscar1['tanque'] = $this->input->post('tanque');
                $aforo1 = $this->model_aforo->load_per_tanque($buscar1);
                foreach ($aforo1 as $datax1) {
                  $galon1 = $datax1->galones;
                  $res1 = "1 -Altura $datax1->altura de Galones $datax1->galones <br>";
                }
                //echo $res1;
                // final nivel de combustible
                $buscar2['combustible'] = $subocomb;
                $buscar2['tanque'] = $this->input->post('tanque');
                $aforo2 = $this->model_aforo->load_per_tanque($buscar2);
                foreach ($aforo2 as $datax2) {
                  $galon2 = $datax2->galones;
                  $res2 = "2 -Altura $datax2->altura de Galones $datax2->galones <br>";
                }
                //echo $res2;

                $operacion = $galon1 - $galon2;

                echo " Subio ---> $operacion <br>";

                if ($bajacomb==0)
                {
                  echo "Subiendo $principio - $nivel2 <br>";
                }
                else{
                  echo "Subiendo $subocomb - $nivel2 <br>";
                }
                $subocomb = $nivel2;
              }
              $nivel2 = $value->med_nivel_combustible;
            }
            // parte de bajaaaaaaaaaar
            elseif ($nivel2<$nivel1)
            {
              if ($subio==1)
              {
                $subio = 0;

                if ($subocomb>=1)
                {

                  $galon1 = 0;
                  $galon2 = 0;
                  // inicio nivel de combustible
                  $buscar1['combustible'] = $nivel2;
                  $buscar1['tanque'] = $this->input->post('tanque');
                  $aforo1 = $this->model_aforo->load_per_tanque($buscar1);
                  foreach ($aforo1 as $datax1) {
                    $galon1 = $datax1->galones;
                    //$res1 = "1 -Altura $datax1->altura de Galones $datax1->galones <br>";
                  }
                  //echo $res1;
                  // final nivel de combustible
                  $buscar2['combustible'] = $subocomb;
                  $buscar2['tanque'] = $this->input->post('tanque');
                  $aforo2 = $this->model_aforo->load_per_tanque($buscar2);
                  foreach ($aforo2 as $datax2) {
                    $galon2 = $datax2->galones;
                    //$res2 = "2 -Altura $datax2->altura de Galones $datax2->galones <br>";
                  }
                  //echo $res2;

                  $operacion = $galon2 - $galon1;

                  echo " Bajo ---> $operacion <br>";

                  if ($operacion>=1) {
                    //echo "Bajando $nivel2 de $subocomb <br>";
                  }

                  echo "Bajando $subocomb - $nivel2<br>";

                }

                $bajacomb = $nivel2;
              }
              $nivel2 = $value->med_nivel_combustible;
            }
            else
            {
               //echo "Error $nivel2 - $nivel1<br>";
            }
            echo "$nivel1 <br>";
            $i++;
          }

          if ($subio==1)
          {
            $galon1 = 0;
            $galon2 = 0;
            // inicio nivel de combustible
            $buscar1['combustible'] = $nivel2;
            $buscar1['tanque'] = $this->input->post('tanque');
            $aforo1 = $this->model_aforo->load_per_tanque($buscar1);
            foreach ($aforo1 as $datax1) {
              $galon1 = $datax1->galones;
              //$res1 = "1 -Altura $datax1->altura de Galones $datax1->galones <br>";
            }
            //echo $res1;
            // final nivel de combustible
            $buscar2['combustible'] = $subocomb;
            $buscar2['tanque'] = $this->input->post('tanque');
            $aforo2 = $this->model_aforo->load_per_tanque($buscar2);
            foreach ($aforo2 as $datax2) {
              $galon2 = $datax2->galones;
              //$res2 = "2 -Altura $datax2->altura de Galones $datax2->galones <br>";
            }
            $operacion = $galon2 - $galon1;
            //echo " Bajo ---> $operacion <br>";

            echo "Bajando $nivel2 de $subocomb <br>";
          }
          else {
            echo "Subiendo $nivel1 de $bajacomb <br>";
          }

        }
        ?>


        <div class="box box-default">
            <div class="box-header with-border">
              <h3 class="box-title">Browser Usage</h3>

              <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i>
                </button>
                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
              </div>
            </div>
            <!-- /.box-body -->
            <div class="box-footer no-padding">
              <ul class="nav nav-pills nav-stacked">
                <li><a href="#">United States of America
                  <span class="pull-right text-red"><i class="fa fa-angle-down"></i> 12%</span></a></li>
                <li><a href="#">India <span class="pull-right text-green"><i class="fa fa-angle-up"></i> 4%</span></a>
                </li>
                <li><a href="#">China
                  <span class="pull-right text-yellow"><i class="fa fa-angle-left"></i> 0%</span></a></li>
              </ul>
            </div>
            <!-- /.footer -->
          </div>

<!--
        <div class="box box-info">
          <div class="box-header with-border">
            <h3 class="box-title">Temperatura</h3>

            <div class="box-tools pull-right">
              <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i>
              </button>
              <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
            </div>
          </div>
          <div class="box-body">
            <div class="chart">
              <canvas id="areatemp" style="height:250px"></canvas>
            </div>
          </div>

        </div>


        <div class="box box-info">
          <div class="box-header with-border">
            <h3 class="box-title">Presión</h3>

            <div class="box-tools pull-right">
              <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i>
              </button>
              <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
            </div>
          </div>
          <div class="box-body">
            <div class="chart">
              <canvas id="areapresion" style="height:250px"></canvas>
            </div>
          </div>

        </div>


        <div class="box box-info">
          <div class="box-header with-border">
            <h3 class="box-title">Filtro</h3>

            <div class="box-tools pull-right">
              <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i>
              </button>
              <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
            </div>
          </div>
          <div class="box-body">
            <div class="chart">
              <canvas id="areabateria" style="height:250px"></canvas>
            </div>
          </div>

        </div>
        <!-- /.box -->

      </div>

    </div>

    <!-- /.row -->
  </section>

</div>

<!-- DONUT CHART -->

<!-- jQuery 2.2.3 -->
<script src="<?php echo base_url(); ?>/template/plugins/jQuery/jquery-2.2.3.min.js"></script>
<!-- ChartJS 1.0.1 -->
<script src="<?php echo base_url(); ?>/template/plugins/chartjs/Chart.min.js"></script>
<!-- FastClick -->
<script src="<?php echo base_url(); ?>/template/dist/js/app.min.js"></script>
<!-- AdminLTE App -->
<script src="<?php echo base_url(); ?>/template/dist/js/app.min.js"></script>


<script>
  $(function () {


    //--------------
    //- AREA CHART -
    //--------------
    // Get context with jQuery - using jQuery's .get() method.
    var areaChartCanvas = $("#areagua").get(0).getContext("2d");
    // This will get the first returned node in the jQuery collection.
    var areaChart = new Chart(areaChartCanvas);

    var areaChartData = {
      labels: [ <?php   if ($data==false) { echo ""; }
      else {

        if ($cantidad>=150) {
          $limite = 5;
        }
        elseif ($cantidad>=100) {
          $limite = 3;
        }
        else{
          $limite = 1;
        }
        $i = 0;
        foreach ($data as $value) {
          $i++;
          if ($i>=$limite) {
            echo '"'.date('H:i', strtotime($value->med_hora)).' ",';
            $i=0;
          }

        }
      } ?>],
      datasets: [
        {
          label: "Electronics",
          fillColor: "#00a5e6",
          strokeColor: "#00a5e6",
          pointColor: "#00a5e6",
          pointStrokeColor: "#c1c7d1",
          pointHighlightFill: "#fff",
          pointHighlightStroke: "rgba(220,220,220,1)",
          data: [ <?php if ($data==false) { echo ""; }
          else{

            if ($cantidad>=150) {
              $limite = 5;
            }
            elseif ($cantidad>=100) {
              $limite = 3;
            }
            else{
              $limite = 1;
            }
            $i = 0;
            foreach ($data as $value) {
              $i++;
              if ($i>=$limite) {
                echo "$value->med_nivel_agua ,";
                $i=0;
              }

            }

          } ?> ]
        }
      ]
    };

    var areaChartOptions = {
      //Boolean - If we should show the scale at all
      showScale: true,
      //Boolean - Whether grid lines are shown across the chart
      scaleShowGridLines: false,
      //String - Colour of the grid lines
      scaleGridLineColor: "rgba(0,0,0,.05)",
      //Number - Width of the grid lines
      scaleGridLineWidth: 1,
      //Boolean - Whether to show horizontal lines (except X axis)
      scaleShowHorizontalLines: true,
      //Boolean - Whether to show vertical lines (except Y axis)
      scaleShowVerticalLines: true,
      //Boolean - Whether the line is curved between points
      bezierCurve: true,
      //Number - Tension of the bezier curve between points
      bezierCurveTension: 0.3,
      //Boolean - Whether to show a dot for each point
      pointDot: false,
      //Number - Radius of each point dot in pixels
      pointDotRadius: 4,
      //Number - Pixel width of point dot stroke
      pointDotStrokeWidth: 1,
      //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
      pointHitDetectionRadius: 20,
      //Boolean - Whether to show a stroke for datasets
      datasetStroke: true,
      //Number - Pixel width of dataset stroke
      datasetStrokeWidth: 2,
      //Boolean - Whether to fill the dataset with a color
      datasetFill: true,
      //String - A legend template
      legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>",
      //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
      maintainAspectRatio: true,
      //Boolean - whether to make the chart responsive to window resizing
      responsive: true
    };

    //Create the line chart
    areaChart.Line(areaChartData, areaChartOptions);




    //==============================

    // Get context with jQuery - using jQuery's .get() method.
    var areaChartCanvas = $("#areacombustible").get(0).getContext("2d");
    // This will get the first returned node in the jQuery collection.
    var areaChart = new Chart(areaChartCanvas);

    var areaChartData = {
      labels: [ <?php   if ($data==false) { echo ""; }
      else {

        if ($cantidad>=150) {
          $limite = 5;
        }
        elseif ($cantidad>=100) {
          $limite = 3;
        }
        else{
          $limite = 1;
        }
        $i = 0;
        foreach ($data as $value) {
          $i++;
          echo '"",';

        }
      } ?>],
      datasets: [
        {
          label: "Electronics",
          fillColor: "#b5b6b6", //color de area char
          strokeColor: "#b5b6b6",// color de linea
          pointColor: "#b5b6b6", // color de punto
          pointStrokeColor: "#ff00d0",
          pointHighlightFill: "#fff",
          pointHighlightStroke: "rgba(255,0,0,1)",

          data: [ <?php if ($data==false) { echo ""; }
          else{

            if ($cantidad>=150) {
              $limite = 5;
            }
            elseif ($cantidad>=100) {
              $limite = 3;
            }
            else{
              $limite = 1;
            }
            $i = 0;
            foreach ($data as $value) {
              echo "$value->med_nivel_combustible ,";
            }

          } ?> ]
        }
      ]
    };

    //Create the line chart
    areaChart.Line(areaChartData, areaChartOptions);

    //=========================================================================

    // Get context with jQuery - using jQuery's .get() method.
    var areaChartCanvas = $("#areatemp").get(0).getContext("2d");
    // This will get the first returned node in the jQuery collection.
    var areaChart = new Chart(areaChartCanvas);

    var areaChartData = {
      labels: [ <?php   if ($data==false) { echo ""; }
      else {

        if ($cantidad>=150) {
          $limite = 5;
        }
        elseif ($cantidad>=100) {
          $limite = 3;
        }
        else{
          $limite = 1;
        }
        $i = 0;
        foreach ($data as $value) {
          $i++;
          if ($i>=$limite) {
            echo '"'.date('H:i', strtotime($value->med_hora)).' ",';
            $i=0;
          }

        }
      } ?>],
      datasets: [
        {
          label: "Electronics",
          fillColor: "#f2320f", //color de area char
          strokeColor: "#f2320f",// color de linea
          pointColor: "#f2320f", // color de punto
          pointStrokeColor: "#ff00d0",
          pointHighlightFill: "#fff",
          pointHighlightStroke: "rgba(255,0,0,1)",
          data: [ <?php if ($data==false) { echo ""; }
          else{

            if ($cantidad>=150) {
              $limite = 5;
            }
            elseif ($cantidad>=100) {
              $limite = 3;
            }
            else{
              $limite = 1;
            }
            $i = 0;
            foreach ($data as $value) {
              $i++;
              if ($i>=$limite) {
                echo "$value->med_temperatura ,";
                $i=0;
              }

            }

          } ?> ]
        }
      ]
    };

    //Create the line chart
    areaChart.Line(areaChartData, areaChartOptions);


    //=========================================================================

    // Get context with jQuery - using jQuery's .get() method.
    var areaChartCanvas = $("#areapresion").get(0).getContext("2d");
    // This will get the first returned node in the jQuery collection.
    var areaChart = new Chart(areaChartCanvas);

    var areaChartData = {
      labels: [ <?php   if ($data==false) { echo ""; }
      else {

        if ($cantidad>=150) {
          $limite = 5;
        }
        elseif ($cantidad>=100) {
          $limite = 3;
        }
        else{
          $limite = 1;
        }
        $i = 0;
        foreach ($data as $value) {
          $i++;
          if ($i>=$limite) {
            echo '"'.date('H:i', strtotime($value->med_hora)).' ",';
            $i=0;
          }

        }
      } ?>],
      datasets: [
        {
          label: "Electronics",
          fillColor: "#16E32B", //color de area char
          strokeColor: "#16E32B",// color de linea
          pointColor: "#16E32B", // color de punto
          pointStrokeColor: "#ff00d0",
          pointHighlightFill: "#fff",
          pointHighlightStroke: "rgba(255,0,0,1)",
          data: [ <?php if ($data==false) { echo ""; }
          else{

            if ($cantidad>=150) {
              $limite = 5;
            }
            elseif ($cantidad>=100) {
              $limite = 3;
            }
            else{
              $limite = 1;
            }
            $i = 0;
            foreach ($data as $value) {
              $i++;
              if ($i>=$limite) {
                echo "$value->med_presion ,";
                $i=0;
              }

            }

          } ?> ]
        }
      ]
    };

    //Create the line chart
    areaChart.Line(areaChartData, areaChartOptions);

    //=========================================================================

    // Get context with jQuery - using jQuery's .get() method.
    var areaChartCanvas = $("#areabateria").get(0).getContext("2d");
    // This will get the first returned node in the jQuery collection.
    var areaChart = new Chart(areaChartCanvas);

    var areaChartData = {
      labels: [ <?php   if ($data==false) { echo ""; }
      else {

        if ($cantidad>=150) {
          $limite = 5;
        }
        elseif ($cantidad>=100) {
          $limite = 3;
        }
        else{
          $limite = 1;
        }
        $i = 0;
        foreach ($data as $value) {
          $i++;
          if ($i>=$limite) {
            echo '"'.date('H:i', strtotime($value->med_hora)).' ",';
            $i=0;
          }

        }
      } ?>],
      datasets: [
        {
          label: "Bateria 1",
          fillColor: "#00d1ca", //color de area char
          strokeColor: "#00d1ca",// color de linea
          pointColor: "#00d1ca", // color de punto
          pointStrokeColor: "#ff00d0",
          pointHighlightFill: "#fff",
          pointHighlightStroke: "rgba(255,0,0,1)",
          data: [ <?php if ($data==false) { echo ""; }
          else{

            if ($cantidad>=150) {
              $limite = 5;
            }
            elseif ($cantidad>=100) {
              $limite = 3;
            }
            else{
              $limite = 1;
            }
            $i = 0;
            foreach ($data as $value) {
              $i++;
              if ($i>=$limite) {
                echo "$value->med_filtro ,";
                $i=0;
              }

            }

          } ?> ]
        }

      ]
    };

    //Create the line chart
    areaChart.Line(areaChartData, areaChartOptions);


  });
</script>

<script>
function printDiv() {
     var contenido= document.getElementById('areaimprimir').innerHTML;
     var contenidoOriginal= document.body.innerHTML;

     document.body.innerHTML = contenido;

     window.print();

     document.body.innerHTML = contenidoOriginal;
}
</script>
